From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: 2stinkysocks <zmehall@gmail.com>
Date: Mon, 22 Jul 2024 19:49:45 -0700
Subject: [PATCH] old raid behavior

Adapted from https://github.com/litetex-oss/mcm-raid-restore/

diff --git a/src/main/java/net/minecraft/world/effect/BadOmenMobEffect.java b/src/main/java/net/minecraft/world/effect/BadOmenMobEffect.java
index 038ee9e1ef4c7fc6a92efbba0f2ec9063c236df5..574bdc2e3c3fb13e80c1d43210d9bf20be217603 100644
--- a/src/main/java/net/minecraft/world/effect/BadOmenMobEffect.java
+++ b/src/main/java/net/minecraft/world/effect/BadOmenMobEffect.java
@@ -23,7 +23,7 @@ class BadOmenMobEffect extends MobEffect {
             if (serverLevel.getDifficulty() != Difficulty.PEACEFUL && serverLevel.isVillage(serverPlayer.blockPosition())) {
                 Raid raid = serverLevel.getRaidAt(serverPlayer.blockPosition());
                 if (raid == null || raid.getRaidOmenLevel() < raid.getMaxRaidOmenLevel()) {
-                    serverPlayer.addEffect(new MobEffectInstance(MobEffects.RAID_OMEN, 600, amplifier));
+                    serverPlayer.addEffect(new MobEffectInstance(MobEffects.RAID_OMEN, serverLevel.purpurConfig.oldRaidBehavior ? 1 : 600, amplifier));
                     serverPlayer.setRaidOmenPosition(serverPlayer.blockPosition());
                     return false;
                 }
diff --git a/src/main/java/net/minecraft/world/entity/raid/Raider.java b/src/main/java/net/minecraft/world/entity/raid/Raider.java
index 06487fc9ea416d8256e0c2cd1969d4e0283ffb05..c9863c441ff769a7a7319df64dd7531658c1222a 100644
--- a/src/main/java/net/minecraft/world/entity/raid/Raider.java
+++ b/src/main/java/net/minecraft/world/entity/raid/Raider.java
@@ -131,6 +131,40 @@ public abstract class Raider extends PatrollingMonster {
 
                 raid.removeFromRaid(this, false);
             }
+
+            // Purpur start - old raid behavior
+            if (this.level().purpurConfig.oldRaidBehavior) {
+                if (this.isPatrolLeader() && raid == null && ((ServerLevel) this.level()).getRaidAt(this.blockPosition()) == null) {
+                    ItemStack itemstack = this.getItemBySlot(EquipmentSlot.HEAD);
+
+                    net.minecraft.world.entity.player.Player entityhuman = null;
+                    if (entity instanceof net.minecraft.world.entity.player.Player player) {
+                        entityhuman = player;
+                    } else if (entity instanceof net.minecraft.world.entity.animal.Wolf entitywolf) {
+                        LivingEntity entityliving = entitywolf.getOwner();
+
+                        if (entitywolf.isTame() && entityliving instanceof net.minecraft.world.entity.player.Player player) {
+                            entityhuman = player;
+                        }
+                    }
+
+                    if (entityhuman != null && !itemstack.isEmpty() && ItemStack.matches(itemstack, Raid.getLeaderBannerInstance(this.registryAccess().lookupOrThrow(Registries.BANNER_PATTERN)))) {
+                        net.minecraft.world.effect.MobEffectInstance mobeffect = entityhuman.getEffect(net.minecraft.world.effect.MobEffects.BAD_OMEN);
+                        int i = 0;
+                        if (mobeffect != null) {
+                            i = mobeffect.getAmplifier();
+                            entityhuman.removeEffectNoUpdate(net.minecraft.world.effect.MobEffects.BAD_OMEN);
+                        }
+                        i = net.minecraft.util.Mth.clamp(i, 0, 4);
+                        net.minecraft.world.effect.MobEffectInstance mobeffect1 = new net.minecraft.world.effect.MobEffectInstance(net.minecraft.world.effect.MobEffects.BAD_OMEN, 120000, i, false, false, true);
+                        if (!this.level().getGameRules().getBoolean(net.minecraft.world.level.GameRules.RULE_DISABLE_RAIDS)) {
+                            entityhuman.addEffect(mobeffect1, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.PATROL_CAPTAIN); // CraftBukkit
+                        }
+                    }
+
+                }
+            }
+            // Purpur end - old raid behavior
         }
 
         super.die(damageSource);
diff --git a/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java b/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
index 2cb73db565bc55a0c49310cf76ee3ed7a6821c6a..a6c55d9253ff20099e9754d5e3acd31dfc53d948 100644
--- a/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
+++ b/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
@@ -142,6 +142,7 @@ public class PurpurWorldConfig {
     public double voidDamageHeight = -64.0D;
     public double voidDamageDealt = 4.0D;
     public int raidCooldownSeconds = 0;
+    public boolean oldRaidBehavior = false;
     public int animalBreedingCooldownSeconds = 0;
     public boolean mobsIgnoreRails = false;
     public boolean rainStopsAfterSleep = true;
@@ -178,6 +179,7 @@ public class PurpurWorldConfig {
         voidDamageHeight = getDouble("gameplay-mechanics.void-damage-height", voidDamageHeight);
         voidDamageDealt = getDouble("gameplay-mechanics.void-damage-dealt", voidDamageDealt);
         raidCooldownSeconds = getInt("gameplay-mechanics.raid-cooldown-seconds", raidCooldownSeconds);
+        oldRaidBehavior = getBoolean("gameplay-mechanics.old-raid-behavior", oldRaidBehavior);
         animalBreedingCooldownSeconds = getInt("gameplay-mechanics.animal-breeding-cooldown-seconds", animalBreedingCooldownSeconds);
         mobsIgnoreRails = getBoolean("gameplay-mechanics.mobs-ignore-rails", mobsIgnoreRails);
         rainStopsAfterSleep = getBoolean("gameplay-mechanics.rain-stops-after-sleep", rainStopsAfterSleep);
