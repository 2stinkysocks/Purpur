--- a/paper-api/build.gradle.kts
+++ b/paper-api/build.gradle.kts
@@ -105,6 +_,18 @@
     main {
         java {
             srcDir(generatedApiPath)
+            srcDir(file("../paper-api/src/main/java"))
+        }
+        resources {
+            srcDir(file("../paper-api/src/main/resources"))
+        }
+    }
+    test {
+        java {
+            srcDir(file("../paper-api/src/test/java"))
+        }
+        resources {
+            srcDir(file("../paper-api/src/test/resources"))
         }
     }
 }
@@ -173,8 +_,10 @@
 val services = objects.newInstance<Services>()
 
 tasks.withType<Javadoc> {
+    //(options as StandardJavadocDocletOptions).addStringOption("-add-modules", "jdk.incubator.vector") // Purpur - our javadocs need this for pufferfish's SIMD patch
+    (options as StandardJavadocDocletOptions).addStringOption("Xdoclint:none", "-quiet") // Purpur - silence Paper's bajillion javadoc warnings
     val options = options as StandardJavadocDocletOptions
-    options.overview = "src/main/javadoc/overview.html"
+    options.overview = "../paper-api/src/main/javadoc/overview.html"
     options.use()
     options.isDocFilesSubDirs = true
     options.links(
@@ -212,11 +_,11 @@
     }
 
     // workaround for https://github.com/gradle/gradle/issues/4046
-    inputs.dir("src/main/javadoc").withPropertyName("javadoc-sourceset")
+    inputs.dir("../paper-api/src/main/javadoc").withPropertyName("javadoc-sourceset")
     val fsOps = services.fileSystemOperations
     doLast {
         fsOps.copy {
-            from("src/main/javadoc") {
+            from("../paper-api/src/main/javadoc") {
                 include("**/doc-files/**")
             }
             into("build/docs/javadoc")
