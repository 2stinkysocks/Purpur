--- a/net/minecraft/world/level/block/entity/BeehiveBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/BeehiveBlockEntity.java
@@ -76,7 +_,7 @@
         "leash",
         "UUID"
     );
-    public static final int MAX_OCCUPANTS = 3;
+    public static final int MAX_OCCUPANTS = org.purpurmc.purpur.PurpurConfig.beeInsideBeeHive; // Purpur - Config to change max number of bees
     private static final int MIN_TICKS_BEFORE_REENTERING_HIVE = 400;
     private static final int MIN_OCCUPATION_TICKS_NECTAR = 2400;
     public static final int MIN_OCCUPATION_TICKS_NECTARLESS = 600;
@@ -154,11 +_,33 @@
         return list;
     }
 
+    // Purpur start - Stored Bee API
+    public List<Entity> releaseBee(BlockState iblockdata, BeehiveBlockEntity.BeeData data, BeehiveBlockEntity.BeeReleaseStatus tileentitybeehive_releasestatus, boolean force) {
+        List<Entity> list = Lists.newArrayList();
+
+        BeehiveBlockEntity.releaseOccupant(this.level, this.worldPosition, iblockdata, data.occupant, list, tileentitybeehive_releasestatus, this.savedFlowerPos, force);
+
+        if (!list.isEmpty()) {
+            stored.remove(data);
+
+            super.setChanged();
+        }
+
+        return list;
+    }
+    // Purpur end - Stored Bee API
+
     @VisibleForDebug
     public int getOccupantCount() {
         return this.stored.size();
     }
 
+    // Purpur start - Stored Bee API
+    public List<BeeData> getStored() {
+        return stored;
+    }
+    // Purpur end - Stored Bee API
+
     // Paper start - Add EntityBlockStorage clearEntities
     public void clearBees() {
         this.stored.clear();
@@ -408,8 +_,8 @@
         return this.stored.stream().map(BeehiveBlockEntity.BeeData::toOccupant).toList();
     }
 
-    static class BeeData {
-        private final BeehiveBlockEntity.Occupant occupant;
+    public static class BeeData { // Purpur - make public - Stored Bee API
+        public final BeehiveBlockEntity.Occupant occupant; // Purpur - make public - Stored Bee API
         private int exitTickCounter; // Paper - Fix bees aging inside hives; separate counter for checking if bee should exit to reduce exit attempts
         private int ticksInHive;
 
