--- a/net/minecraft/world/level/block/entity/BeaconBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/BeaconBlockEntity.java
@@ -139,6 +_,16 @@
 
     public double getEffectRange() {
         if (this.effectRange < 0) {
+            // Purpur start - Beacon Activation Range Configurable
+            if (this.level != null) {
+                switch (this.levels) {
+                    case 1: return this.level.purpurConfig.beaconLevelOne;
+                    case 2: return this.level.purpurConfig.beaconLevelTwo;
+                    case 3: return this.level.purpurConfig.beaconLevelThree;
+                    case 4: return this.level.purpurConfig.beaconLevelFour;
+                }
+            }
+            // Purpur end - Beacon Activation Range Configurable
             return this.levels * 10 + 10;
         } else {
             return effectRange;
@@ -168,6 +_,7 @@
         int y = pos.getY();
         int z = pos.getZ();
         BlockPos blockPos;
+        boolean isTintedGlass = false; // Purpur - allow beacon effects when covered by tinted glass
         if (blockEntity.lastCheckY < y) {
             blockPos = pos;
             blockEntity.checkingBeamSections = Lists.newArrayList();
@@ -197,6 +_,7 @@
                     }
                 }
             } else {
+                if (level.purpurConfig.beaconAllowEffectsWithTintedGlass && blockState.getBlock().equals(Blocks.TINTED_GLASS)) {isTintedGlass = true;} // Purpur - allow beacon effects when covered by tinted glass
                 if (beaconBeamSection == null || blockState.getLightBlock() >= 15 && !blockState.is(Blocks.BEDROCK)) {
                     blockEntity.checkingBeamSections.clear();
                     blockEntity.lastCheckY = height;
@@ -216,7 +_,7 @@
                 blockEntity.levels = updateBase(level, x, y, z);
             }
 
-            if (blockEntity.levels > 0 && !blockEntity.beamSections.isEmpty()) {
+            if (blockEntity.levels > 0 && (!blockEntity.beamSections.isEmpty() || (level.purpurConfig.beaconAllowEffectsWithTintedGlass && isTintedGlass))) { // Purpur - allow beacon effects when covered by tinted glass
                 applyEffects(level, pos, blockEntity.levels, blockEntity.primaryPower, blockEntity.secondaryPower, blockEntity); // Paper - Custom beacon ranges
                 playSound(level, pos, SoundEvents.BEACON_AMBIENT);
             }
