--- a/net/minecraft/world/entity/LivingEntity.java
+++ b/net/minecraft/world/entity/LivingEntity.java
@@ -459,6 +_,12 @@
                     if (d < 0.0) {
                         double damagePerBlock = this.level().getWorldBorder().getDamagePerBlock();
                         if (damagePerBlock > 0.0) {
+                            // Purpur start - Add option to teleport to spawn if outside world border
+                            if (this.level().purpurConfig.teleportIfOutsideBorder && this instanceof ServerPlayer serverPlayer) {
+                                serverPlayer.teleport(io.papermc.paper.util.MCUtil.toLocation(this.level(), this.level().getSharedSpawnPos()));
+                                return;
+                            }
+                            // Purpur end - Add option to teleport to spawn if outside world border
                             this.hurtServer(serverLevel1, this.damageSources().outOfBorder(), Math.max(1, Mth.floor(-d * damagePerBlock)));
                         }
                     }
@@ -1594,6 +_,18 @@
                 }
             }
 
+            // Purpur start - Totems work in inventory
+            if (level().purpurConfig.totemOfUndyingWorksInInventory && this instanceof ServerPlayer player && (itemStack == null || itemStack.getItem() != Items.TOTEM_OF_UNDYING) && player.getBukkitEntity().hasPermission("purpur.inventory_totem")) {
+                for (ItemStack item : player.getInventory().items) {
+                    if (item.getItem() == Items.TOTEM_OF_UNDYING) {
+                        itemInHand = item;
+                        itemStack = item.copy();
+                        break;
+                    }
+                }
+            }
+            // Purpur end - Totems work in inventory
+
             org.bukkit.inventory.EquipmentSlot handSlot = (hand != null) ? org.bukkit.craftbukkit.CraftEquipmentSlot.getHand(hand) : null;
             EntityResurrectEvent event = new EntityResurrectEvent((org.bukkit.entity.LivingEntity) this.getBukkitEntity(), handSlot);
             event.setCancelled(itemStack == null);
@@ -1788,6 +_,7 @@
         boolean flag = this.lastHurtByPlayerTime > 0;
         this.dropEquipment(level); // CraftBukkit - from below
         if (this.shouldDropLoot() && level.getGameRules().getBoolean(GameRules.RULE_DOMOBLOOT)) {
+            if (!(damageSource.is(net.minecraft.world.damagesource.DamageTypes.CRAMMING) && level().purpurConfig.disableDropsOnCrammingDeath)) { // Purpur - Disable loot drops on death by cramming
             this.dropFromLootTable(level, damageSource, flag);
             // Paper start
             final boolean prev = this.clearEquipmentSlots;
@@ -1796,6 +_,7 @@
             // Paper end
             this.dropCustomDeathLoot(level, damageSource, flag);
             this.clearEquipmentSlots = prev; // Paper
+            } // Purpur - Disable loot drops on death by cramming
         }
 
         // CraftBukkit start - Call death event // Paper start - call advancement triggers with correct entity equipment
@@ -4396,6 +_,12 @@
             ? slot == EquipmentSlot.MAINHAND && this.canUseSlot(EquipmentSlot.MAINHAND)
             : slot == equippable.slot() && this.canUseSlot(equippable.slot()) && equippable.canBeEquippedBy(this.getType());
     }
+
+    // Purpur start - Dispenser curse of binding protection
+    public @Nullable EquipmentSlot getEquipmentSlotForDispenserItem(ItemStack itemstack) {
+        return EnchantmentHelper.getItemEnchantmentLevel(net.minecraft.world.item.enchantment.Enchantments.BINDING_CURSE, itemstack) > 0 ? null : this.getEquipmentSlotForItem(itemstack);
+    }
+    // Purpur end - Dispenser curse of binding protection
 
     private static SlotAccess createEquipmentSlotAccess(LivingEntity entity, EquipmentSlot slot) {
         return slot != EquipmentSlot.HEAD && slot != EquipmentSlot.MAINHAND && slot != EquipmentSlot.OFFHAND
