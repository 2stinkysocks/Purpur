--- a/net/minecraft/server/MinecraftServer.java
+++ b/net/minecraft/server/MinecraftServer.java
@@ -302,6 +_,7 @@
     public final io.papermc.paper.configuration.PaperConfigurations paperConfigurations; // Paper - add paper configuration files
     public boolean isIteratingOverLevels = false; // Paper - Throw exception on world create while being ticked
     private final Set<String> pluginsBlockingSleep = new java.util.HashSet<>(); // Paper - API to allow/disallow tick sleeping
+    public boolean lagging = false; // Purpur - Lagging threshold
     public static final long SERVER_INIT = System.nanoTime(); // Paper - Lag compensation
 
     public static <S extends MinecraftServer> S spin(Function<Thread, S> threadFunction) {
@@ -1229,6 +_,7 @@
                     this.recentTps[0] = tps1.getAverage();
                     this.recentTps[1] = tps5.getAverage();
                     this.recentTps[2] = tps15.getAverage();
+                    lagging = recentTps[0] < org.purpurmc.purpur.PurpurConfig.laggingThreshold; // Purpur - Lagging threshold
                     tickSection = currentTime;
                 }
                 // Paper end - further improve server tick loop
@@ -1260,6 +_,12 @@
                     profilerFiller.popPush("nextTickWait");
                     this.mayHaveDelayedTasks = true;
                     this.delayedTasksMaxNextTickTimeNanos = Math.max(Util.getNanos() + l, this.nextTickTimeNanos);
+                    // Purpur start - Configurable TPS Catchup
+                    if (!org.purpurmc.purpur.PurpurConfig.tpsCatchup /*|| !gg.pufferfish.pufferfish.PufferfishConfig.tpsCatchup*/) { // Purpur - Configurable TPS Catchup
+                        this.nextTickTimeNanos = currentTime + l;
+                        this.delayedTasksMaxNextTickTimeNanos = nextTickTimeNanos;
+                    }
+                    // Purpur end - Configurable TPS Catchup
                     this.startMeasuringTaskExecutionTime();
                     this.waitUntilNextTick();
                     this.finishMeasuringTaskExecutionTime();
@@ -1854,7 +_,7 @@
 
     @DontObfuscate
     public String getServerModName() {
-        return io.papermc.paper.ServerBuildInfo.buildInfo().brandName(); // Paper
+        return org.purpurmc.purpur.PurpurConfig.serverModName; // Paper // Purpur - Configurable server mod name
     }
 
     public SystemReport fillSystemReport(SystemReport systemReport) {
